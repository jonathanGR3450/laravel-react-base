version: '3'
services:

  #php service
  backend:
    build:
      args:
          user: www
          uid: 1000
      context: ./backend
      dockerfile: Dockerfile.prod
    container_name: web-fusa
    env_file:
      - ./backend/.env
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./backend:/var/www
      - ./backend/php/local.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      - SERVICE_NAME=web-fusa
      - SERVICE_TAGS=prod
    depends_on:
      - db
    networks:
      - fusa-network

  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver-fusa
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
    volumes:
      - ./backend:/var/www
      - ./backend/nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - fusa-network


  db:
    image: postgres:12.8-alpine
    container_name: db-fusa
    restart: unless-stopped
    env_file:
      - ./backend/.env
    tty: true
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_HOST_AUTH_METHOD: trust
      PGDATA: /var/lib/postgresql/data
    volumes:
      - pgdata-fusa-prod:/var/lib/postgresql/data
    networks:
      - fusa-network

  frontend:
    build:
      context: ./front
      dockerfile: Dockerfile.prod
    ports:
      - 80:80
    container_name: front_fusa
    volumes:
       - ./front:/app
       - ./front/node_modules:/app/node_modules
    networks:
      - fusa-network

#Docker Networks
networks:
  fusa-network:
    driver: bridge

#Volumes
volumes:
  pgdata-fusa-prod:
    driver: local